echo '
echo '
apiVersion: kubeadm.k8s.io/v1beta1
kind: ClusterConfiguration
kubernetesVersion: stable
apiServer:
  certSANs:
  - "LOAD_BALANCER_DNS"
controlPlaneEndpoint: "LOAD_BALANCER_DNS:6443"
networking:
  podSubnet: 192.168.0.0/16
' > kubeadm-config.yaml

USER=ubuntu # customizable
CONTROL_PLANE_IPS="10.42.0.2 10.42.0.3"
for host in ${CONTROL_PLANE_IPS}; do
    scp -i ~/.ssh/ut-io-dsi-deploy.pem /etc/kubernetes/pki/ca.crt "${USER}"@$host:
    scp -i ~/.ssh/ut-io-dsi-deploy.pem /etc/kubernetes/pki/ca.key "${USER}"@$host:
    scp -i ~/.ssh/ut-io-dsi-deploy.pem /etc/kubernetes/pki/sa.key "${USER}"@$host:
    scp -i ~/.ssh/ut-io-dsi-deploy.pem /etc/kubernetes/pki/sa.pub "${USER}"@$host:
    scp -i ~/.ssh/ut-io-dsi-deploy.pem /etc/kubernetes/pki/front-proxy-ca.crt "${USER}"@$host:
    scp -i ~/.ssh/ut-io-dsi-deploy.pem /etc/kubernetes/pki/front-proxy-ca.key "${USER}"@$host:
    scp -i ~/.ssh/ut-io-dsi-deploy.pem /etc/kubernetes/pki/etcd/ca.crt "${USER}"@$host:etcd-ca.crt
    scp -i ~/.ssh/ut-io-dsi-deploy.pem /etc/kubernetes/pki/etcd/ca.key "${USER}"@$host:etcd-ca.key
    scp -i ~/.ssh/ut-io-dsi-deploy.pem /etc/kubernetes/admin.conf "${USER}"@$host:
done
' > init.sh && chmod +x init.sh && sudo ./init.sh
